<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cj.life.middle.apc.repository.mapper.FollowAppTenantMapper">
  <resultMap id="BaseResultMap" type="cj.life.middle.apc.domain.FollowAppTenant">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="app_id" jdbcType="VARCHAR" property="appId" />
    <id column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="follow_time" jdbcType="VARCHAR" property="followTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    app_id, tenant_id, follow_time
  </sql>
  <select id="selectByExample" parameterType="cj.life.middle.apc.domain.FollowAppTenantExample" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from follow_app_tenant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from follow_app_tenant
    where app_id = #{appId,jdbcType=VARCHAR}
      and tenant_id = #{tenantId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from follow_app_tenant
    where app_id = #{appId,jdbcType=VARCHAR}
      and tenant_id = #{tenantId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cj.life.middle.apc.domain.FollowAppTenantExample">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from follow_app_tenant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cj.life.middle.apc.domain.FollowAppTenant">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into follow_app_tenant (app_id, tenant_id, follow_time
      )
    values (#{appId,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, #{followTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cj.life.middle.apc.domain.FollowAppTenant">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into follow_app_tenant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        app_id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="followTime != null">
        follow_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="followTime != null">
        #{followTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cj.life.middle.apc.domain.FollowAppTenantExample" resultType="java.lang.Long">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select count(*) from follow_app_tenant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update follow_app_tenant
    <set>
      <if test="row.appId != null">
        app_id = #{row.appId,jdbcType=VARCHAR},
      </if>
      <if test="row.tenantId != null">
        tenant_id = #{row.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="row.followTime != null">
        follow_time = #{row.followTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update follow_app_tenant
    set app_id = #{row.appId,jdbcType=VARCHAR},
      tenant_id = #{row.tenantId,jdbcType=VARCHAR},
      follow_time = #{row.followTime,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cj.life.middle.apc.domain.FollowAppTenant">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update follow_app_tenant
    <set>
      <if test="followTime != null">
        follow_time = #{followTime,jdbcType=VARCHAR},
      </if>
    </set>
    where app_id = #{appId,jdbcType=VARCHAR}
      and tenant_id = #{tenantId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cj.life.middle.apc.domain.FollowAppTenant">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update follow_app_tenant
    set follow_time = #{followTime,jdbcType=VARCHAR}
    where app_id = #{appId,jdbcType=VARCHAR}
      and tenant_id = #{tenantId,jdbcType=VARCHAR}
  </update>
  <select id="listAppByTenant" parameterType="cj.life.middle.apc.domain.FollowAppTenant" resultMap="cj.life.middle.apc.repository.mapper.FactAppMapper.BaseResultMap">
    select
    app.*
    from follow_app_tenant fat,fact_app app
    where fat.app_id=app.app_id
    and fat.tenant_id = #{tenantId,jdbcType=VARCHAR}
    order by follow_time desc
    limit #{offset},#{limit}
  </select>
</mapper>